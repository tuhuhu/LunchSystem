@using SystemSetup.Models;
@using SystemSetup.Constants;
@using SystemSetup.Constants.Security;
@using SystemSetup.Constants.Resources;
@*CSS*@
@Styles.Render("~/Content/themes/iseiQ/maint.css")
@model TaxRateMaintModel
@{
    ViewBag.Title = Maint.TaxRateMaintRegister;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = HttpContext.Current.Session["CmnEntityModel"] as CmnEntityModel;
    var tempDateTime = new DateTime();
}
<div id="MaintRegister" class="edit-screen">
    @using (Html.BeginForm("Edit", "TaxRateMaint", FormMethod.Post, new { id = "formTaxRateMaintRegis", enctype = "multipart/form-data", @class = "form-horizontal" }))
    {
        <div id="title">@Maint.TaxRateMaintRegister</div>
        @Html.HiddenFor(m => m.DEL_FLG, new { @class = "sp-id" })
        @Html.HiddenFor(m => m.TAX_RATE_ID, new { @class = "sp-id" })
        
        <div class="form-group">          
            <label class="title-row">@Maint.REG_APPLY_DATE_FROM <span class="RequiredField">*</span></label>
            <span class="date datepicker-days date-from">
                @Html.TextBoxFor(m => m.APPLY_DATE_FROM, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10 })
                <button type="button" id="DateFromCcalendar" name="DateFromcalendar" class="btn btn-default btn-add-on"><i class="btn-icon btn-calendar"></i></button>
            </span>
        </div>
        <div class="form-group">           
            <label class="title-row">@Maint.REG_APPLY_DATE_TO <span class="RequiredField">*</span></label>
            <span class="date datepicker-days date-to">
                @Html.TextBoxFor(m => m.APPLY_DATE_TO, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10 })
                <button type="button" id="DateTocalendar" name="DateTocalendar" class="btn btn-default btn-add-on"><i class="btn-icon btn-calendar"></i></button>
            </span>
        </div>
        <div class="form-group">           
            <label class="title-row">@Maint.TAX_RATE <span class="RequiredField">*</span></label>
            @Html.TextBoxFor(m => m.TAX_RATE, new { @class = "txt-w-50  ", maxlength = 4 })
        </div>
    @Html.HiddenFor(m => m.INS_DATE)
    @Html.HiddenFor(m => m.INS_USER_ID)
    @Html.HiddenFor(m => m.UPD_DATE)
    @Html.HiddenFor(m => m.UPD_USER_ID)
        if (Model.TAX_RATE_ID >0)
        {
            <div class="form-group">
                @Html.Label(@Maint.REGISTER_DATE, new { @class = "title-row" })
                @if (Model.INS_DATE != null)
                {
                    <label class="font-weight-normal">@Model.INS_DATE.Value.ToString("yyyy/MM/dd HH:mm")</label>
                }
            </div>
            <div class="form-group">
                @Html.Label(@Maint.REGISTER_PERSON, new { @class = "title-row" })
                <label class="font-weight-normal">@Model.INS_USERNAME</label>
            </div>
            <div class="form-group">
                @Html.Label(@Maint.DATE_MODIFY, new { @class = "title-row" })
                @if (Model.UPD_DATE != null)
                {
                    <label class="font-weight-normal">@Model.UPD_DATE.Value.ToString("yyyy/MM/dd HH:mm")</label>
                }
            </div>
            <div class="form-group">
                @Html.Label(@Maint.PERSON_UPDATE, new { @class = "title-row" })
                <label class="font-weight-normal">@Model.UPD_USERNAME</label>
            </div>
        }

        <div class="form-group action-button-bottom">
            <button type="button" id="btnBack" name="btnBack" class="btn btn-default"><i class="btn-icon btn-back">@EstimationRegister.btnBack</i></button>
            <div class="pull-right">
                <button type="button" id="btnClear" name="btnClear" class="btn btn-default"><i class="btn-icon btn-clear">@EstimationRegister.btnClear</i></button>
                <button type="button" id="btnSubmit" name="btnSubmit" class="btn btn-orange"><i class="btn-icon btn-edit">@EstimationRegister.btnRegister</i></button>                
            </div>            
        </div>
        }
        @using (Html.BeginForm("TaxRateMaintList", "TaxRateMaint", FormMethod.Post, new
    {
        area = "Maint",
        id = "formTaxRateMaint",
        enctype = "multipart/form-data"
    }))
        {
            @Html.HiddenFor(m => m.REGIST_PARAM.APPLY_DATE_FROM)
            @Html.HiddenFor(m => m.REGIST_PARAM.APPLY_DATE_TO)
            @Html.HiddenFor(m => m.REGIST_PARAM.TAX_RATE)
            @Html.HiddenFor(m => m.SEARCH_START)
            @Html.HiddenFor(m => m.SEARCH_LENGTH)
        }
    </div>

<script type="text/javascript">
    checkInputDecimal($("#TAX_RATE"));

    iseiQ.utility.imeControl($("#APPLY_DATE_FROM"), 'disable');
    iseiQ.utility.imeControl($("#APPLY_DATE_TO"), 'disable');
    iseiQ.utility.imeControl($("#TAX_RATE"), 'disable');

    var checkTimeOutUrl = '@Url.Action("CheckTimeOut", "Common", new {area = "Common"})';
    var UserMaintListUrl = '@Url.Action("UserMaintList", "UserMaint", new { area = "Maint" })';

    $(function () {
        if ($("#TAX_RATE_ID").val() == "0") {
            $(".date.datepicker-days.date-from").datepicker("setDate", "@tempDateTime");
            $("#APPLY_DATE_FROM").val("");
            $(".date.datepicker-days.date-to").datepicker("setDate", "2999/12/31");
            $("#TAX_RATE").val("0");
        } 
    });

    ////////////////////////////////////////////////////////////////////////////////////
    ////Check validate
    ////////////////////////////////////////////////////////////////////////////////////
    function validateData() {
        var invalidMess = [];
        var errStartDate = null;
        var errEndDate = null;
        var startDate = $('#APPLY_DATE_FROM').val();    //適用期間開始日
        var endDate = $('#APPLY_DATE_TO').val();    //適用期間終了日
        var TaxRate = $('#TAX_RATE').val(); //消費税率

        //適用期間開始日
        if (startDate == "") {
            errStartDate = '@Maint.REG_APPLY_DATE_FROM' + Constant.ERR_REQUIRED;
            invalidMess.push(errStartDate);
        } else {
            errStartDate = validDate(startDate, Constant.DATE_FORMAT, '@Maint.REG_APPLY_DATE_FROM');
            if (errStartDate != null) {
                invalidMess.push(errStartDate);
            }
        }

        //適用期間終了日
        if (endDate == "") {
            errEndDate = '@Maint.REG_APPLY_DATE_TO' + Constant.ERR_REQUIRED;
            invalidMess.push(errEndDate);
        } else {
            errEndDate = validDate(endDate, Constant.DATE_FORMAT, '@Maint.REG_APPLY_DATE_TO');
            if (errEndDate != null) {
                invalidMess.push(errEndDate);
            }
        }

        if (errStartDate == null && errEndDate == null && startDate.length > 0 && endDate.length > 0) {
            if (!iseiQ.utility.compareDate(startDate, endDate, 'yyyy/mm/dd')) {
                invalidMess.push(['@Maint.REG_APPLY_DATE_TO' + 'は' + '@Maint.REG_APPLY_DATE_FROM' + 'より未来の日付を入力して下さい。']);
            }
        }

        //消費税率
        if (TaxRate == "") {
            invalidMess.push('@Maint.TAX_RATE' + Constant.ERR_REQUIRED);
        } else {
            var arr = TaxRate.split('.');
            var integerPart = arr[0];
            var decimalPart = arr[1];

            if (decimalPart != null) {
                if (decimalPart.length == 0 && arr.length == 2) {
                    TaxRate.replace('.', '');
                }
            }

            if (!iseiQ.utility.validDecimalNumeric(TaxRate)) {
                invalidMess.push("@string.Format(@Messages.IncorrectFormat, "消費税率")");
            } else {
                var maxLength = 1;

                if (integerPart.length > maxLength) {
                    invalidMess.push("@string.Format(@Messages.MaxLength, "消費税率の整数桁", 1)");
                }

                if (arr.length > 2) {
                    invalidMess.push("@string.Format(@Messages.IncorrectFormat, "消費税率")");
                } else {
                    if (arr.length > 1) {

                        if (decimalPart.length > 2) {
                            invalidMess.push("@string.Format(@Messages.MaxLength, "消費税率の少数桁", 2)");
                        }
                    }
                }
            }
        }
        return invalidMess;
    }

    function checkInputDecimal(control) {
        control.on("change keyup", function (e) {
            var text = control.val();
            var regX = /[^0-9/.]/g;

            if (regX.test(text)) {
                control.val(text.replace(regX, ''));
            }
        });
    }

    // Check isvalid date
    // Return true if valid, false if invalid
    function isValidDate(date) {
        var bits = date.split('/');
        var checkingDate = new Date(bits[0], bits[1] - 1, bits[2]);
        return checkingDate && (checkingDate.getMonth() + 1) == bits[1] && checkingDate.getDate() == Number(bits[2]);
    }

    // Check validation of date field
    // date is input data
    // format is datetime type (yyyy/mm/dd or yyyy/mm)
    // control is field name
    // return invalid message if invalid, null if valid
    function validDate(date, format, control) {
        var constantErr = Constant.ERR_FORMAT_DATE;
        if (date.length > 0) {
            if (format == 'yyyy/mm') {
                date += '/01';
                constantErr = Constant.ERR_FORMAT_YM;
            }

            if (!/^[0-9]{4}\/[0-9]{1,2}\/[0-9]{1,2}/.test(date) || !isValidDate(date)) {
                return control + constantErr;
            }

            var year = parseInt(date.split('/')[0]);

            if ("1753" > year || year > "9999") {
                if (format == 'yyyy/mm') {
                    return control + Constant.ERR_INCORRECT_DATE;
                }
                return control + Constant.ERR_INCORRECT_DATE;
            }
        }

        return null;
    }
    ////////////////////////////////////////////////////////////////////////////////////
    ////Clear
    ////////////////////////////////////////////////////////////////////////////////////
    $(document).off('#btnClear');
    $(document).on('click', '#btnClear', function () {
        iseiQ.utility.showConfirmModal('@string.Format(@Messages.ConfirmClear)', function (action) {
            $('.validation-summary-errors').remove();
            if (action) {
                if ($('#TAX_RATE_ID').val() == "0") {
                    var result = iseiQ.utility.getDataByAjax(checkTimeOutUrl, null);
                    if (!result) return;

                    $(".date.datepicker-days.date-from").datepicker("setDate", "@tempDateTime");
                    $("#APPLY_DATE_FROM").val("");
                    $(".date.datepicker-days.date-to").datepicker("setDate", "2999/12/31");
                    $("#TAX_RATE").val("0");
                } else {
                    $(".date.datepicker-days.date-from").datepicker("setDate", "@Model.APPLY_DATE_FROM.ToString("yyyy/MM/dd")");
                    $(".date.datepicker-days.date-to").datepicker("setDate", "@Model.APPLY_DATE_TO.ToString("yyyy/MM/dd")");
                    $("#TAX_RATE").val("@Model.TAX_RATE");
                }
            }
        })
    });

    ////////////////////////////////////////////////////////////////////////////////////
    ////Submit
    ////////////////////////////////////////////////////////////////////////////////////
    $(document).off('#btnSubmit');
    $(document).on('click', '#btnSubmit', function () {
        var result = iseiQ.utility.getDataByAjax(checkTimeOutUrl, null);
        if (!result) return;
        $('.validation-summary-errors').remove();
        var invalidMess = validateData();
        if (invalidMess.length > 0) {
            iseiQ.utility.showClientError(invalidMess);
            return false;
        }

        var TaxRateID = '@Model.TAX_RATE_ID';

        if (TaxRateID == '0') {
            $('#INS_DATE').val('@tempDateTime.ToString()');
            $('#INS_DATE').css("visibility", "hidden");
            $('#UPD_DATE').val('@tempDateTime.ToString()');
            $('#UPD_DATE').css("visibility", "hidden");
        }

        iseiQ.utility.showConfirmModal('@string.Format(@Messages.ConfirmSubmitData, (Model.TAX_RATE_ID > 0 ? Messages.Update : Messages.Register))', function (action) {
            if (action) {
                $("#formTaxRateMaintRegis").submit();
            }
        })
    });

    $("#formTaxRateMaintRegis").submit(function (event) {
        var timeout = iseiQ.utility.getDataByAjax(checkTimeOutUrl, null);
        if (!timeout) return;
        var formData = new FormData($(this)[0]);
        $.ajax(
        {
            url: '@Url.Action("Edit", "TaxRateMaint")',
            data: formData,
            mimeType: "multipart/form-data",
            type: 'POST',
            contentType: false,
            processData: false,
            success: function (res) {
                console.log(res);
                var data = JSON.parse(res);
                if (data.statusCode == true) {
                    if (res.length == 0) {
                        window.parent.$('.ui-dialog-content:visible').dialog('close');
                        window.location.href = '/Common/Common/CloseIframe/';
                    } else {
                        var result = jQuery.parseJSON(res);
                        window.parent.$('.ui-dialog-content:visible').dialog('close');
                        var message = result.isNew == true ? "@Maint.TaxRateMaintRegisterSuccess" : "@Maint.TaxRateMaintUpdateSuccess";
                        iseiQ.utility.showMessageModal(message, false, function () {
                            $('#formTaxRateMaint').submit();
                            //window.location.href = ContactPersMaintListUrl;
                            return false;
                        });
                    }
                }
                else {
                    var invalidMess = [];
                    invalidMess.push('@Maint.TaxMaintDuplicate');
                    iseiQ.utility.showClientError(invalidMess);
                    return false;
                }
            },
            error: function (xhr) {
                window.parent.$('.ui-dialog-content:visible').dialog('close');
                window.location.href = '/Common/Common/CloseIframe/';
            }
        });
        event.preventDefault();
    });

    ////////////////////////////////////////////////////////////////////////////////////
    ////Back
    ////////////////////////////////////////////////////////////////////////////////////
    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        iseiQ.utility.showConfirmModal('@string.Format(@Messages.ConfirmBack)', function (action) {
            if (action) {
                var result = iseiQ.utility.getDataByAjax(checkTimeOutUrl, null);
                if (!result) return;

                $(window).off('beforeunload');

                $('#formTaxRateMaint').submit();
                //window.location = window.location.host + Url;
                //window.location.href = UserMaintListUrl;
            }
        })
    });

</script>