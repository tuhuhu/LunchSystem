@using SystemSetup.Models;
@using SystemSetup.Constants;
@using SystemSetup.Constants.Security;
@using SystemSetup.Constants.Resources;
@*CSS*@
@Styles.Render("~/Content/themes/iseiQ/maint.css")
@model AccountingSubjectGroupMaintModel
@{
    ViewBag.Title = Maint.AccountingSubjectGroupMaintRegister;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = HttpContext.Current.Session["CmnEntityModel"] as CmnEntityModel;
    var authorityList = currentUser.AuthorityList as List<string>;
    var tempDateTime = new DateTime();
}
<div id="MaintRegister" class="edit-screen">
    @using (Html.BeginForm("Edit", "AccountingSubjectGroupMaint", FormMethod.Post, new { id = "Regis", enctype = "multipart/form-data", @class = "form-horizontal" }))
    {
        <div id="title">@Maint.AccountingSubjectGroupMaintRegister</div>
        @Html.HiddenFor(m => m.DEL_FLG, new { @class = "sp-id" })
        
        <div class="form-group">            
            <label class="title-row">@Maint.ACCOUNT_GROUP_CD <span class="RequiredField">*</span></label>
            @Html.TextBoxFor(m => m.ACCOUNT_GROUP_CD, new { @class = "width-50 margin-left-8", style = "ime-mode: active;", maxlength = 4 })
        </div>
        <div class="form-group">          
            <label class="title-row">@Maint.ACCOUNT_GROUP_NAME <span class="RequiredField">*</span></label>
            @Html.TextBoxFor(m => m.ACCOUNT_GROUP_NAME, new { @class = "width-300 margin-left-15", style = "ime-mode: active;", maxlength = 30 })
            <input type="hidden" id="CLEAR_ACCOUNT_GROUP_NAME" name="CLEAR_ACCOUNT_GROUP_NAME" value="@Model.ACCOUNT_GROUP_NAME">
        </div>
        <div class="form-group">
            @Html.Label(@Maint.To_Disable, new { @for = "DISABLE_FLG", @class = "title-row" })
            @if (String.IsNullOrEmpty(Model.DISABLE_FLG) || Model.DISABLE_FLG.Equals("0"))
            {
                <input id="DISABLE_FLG" type="checkbox" class="margin-left-15">
                <input id="DISABLE_FLG_HIDDEN" name="DISABLE_FLG" type="hidden" value="0">
            }
            else
            {
                <input id="DISABLE_FLG" type="checkbox" checked="checked" class="margin-left-15">
                <input id="DISABLE_FLG_HIDDEN" name="DISABLE_FLG" type="hidden" value="1">
            }
        </div>
        @Html.HiddenFor(m => m.INS_DATE)
        @Html.HiddenFor(m => m.INS_USER_ID)
        @Html.HiddenFor(m => m.UPD_DATE)
        @Html.HiddenFor(m => m.UPD_USER_ID)
        if (Model.ACCOUNT_GROUP_SEQ_NO != null)
        {
            <div class="form-group">
                @Html.Label(@Maint.REGISTER_DATE, new { @class = "title-row" })
                @if (Model.INS_DATE != null)
                {
                    <label class="font-weight-normal padding-left-15">@Model.INS_DATE.Value.ToString("yyyy/MM/dd HH:mm")</label>
                }
            </div>
            <div class="form-group">
                @Html.Label(@Maint.REGISTER_PERSON, new { @class = "title-row" })               
                <label class="font-weight-normal padding-left-15">@Model.INS_USERNAME</label>
            </div>
            <div class="form-group">
                @Html.Label(@Maint.DATE_MODIFY, new { @class = "title-row" })
              @if (Model.UPD_DATE != null)
              {
                <label class="font-weight-normal padding-left-15">@Model.UPD_DATE.Value.ToString("yyyy/MM/dd HH:mm")</label>
              }
            </div>
            <div class="form-group">
                @Html.Label(@Maint.PERSON_UPDATE, new { @class = "title-row" })                
                <label class="font-weight-normal padding-left-15">@Model.UPD_USERNAME</label>
            </div>
        }

        <div class="form-group action-button-bottom">
            <button type="button" id="btnBack" name="btnBack" class="btn btn-default"><i class="btn-icon btn-back">@EstimationRegister.btnBack</i></button>
            <div class="pull-right">
                <button type="button" id="btnClear" name="btnClear" class="btn btn-default"><i class="btn-icon btn-clear">@EstimationRegister.btnClear</i></button>
                <button type="button" id="btnSubmit" name="btnSubmit" class="btn btn-orange "><i class="btn-icon btn-edit">@EstimationRegister.btnRegister</i></button>
            </div>
            
        </div>
        @Html.HiddenFor(m => m.ACCOUNT_GROUP_SEQ_NO)
    }

            @using (Html.BeginForm("AccountingSubjectGroupMaintList", "AccountingSubjectGroupMaint", FormMethod.Post, new
            {
                area = "Maint",
                id = "Back",
                enctype = "multipart/form-data"
            }))
            {
                @Html.HiddenFor(m => m.ACCOUNT_GROUP_SEQ_NO)
                @Html.HiddenFor(m => m.SEARCH_PARAM.ACCOUNT_GROUP_CD)
                @Html.HiddenFor(m => m.SEARCH_PARAM.ACCOUNT_GROUP_NAME)
                @Html.HiddenFor(m => m.SEARCH_PARAM.DISABLE_FLG)
                @Html.HiddenFor(m => m.DISABLE_FLG)
                @Html.HiddenFor(m => m.SEARCH_START)
                @Html.HiddenFor(m => m.SEARCH_LENGTH)
            }
        </div>

<script type="text/javascript">
    iseiQ.utility.checkInputAlphanumeric($("#ACCOUNT_GROUP_CD"));

    var checkTimeOutUrl = '@Url.Action("CheckTimeOut", "Common", new {area = "Common"})';
    var UserMaintListUrl = '@Url.Action("UserMaintList", "UserMaint", new { area = "Maint" })';

    ////////////////////////////////////////////////////////////////////////////////////
    ////Event Listeners
    ////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////
    ////Check validate
    ////////////////////////////////////////////////////////////////////////////////////
    function validateData() {
        var invalidMess = [];

        var accountGroupCd = $('#ACCOUNT_GROUP_CD').val();
        var accountGroupName = $('#ACCOUNT_GROUP_NAME').val();

        if (accountGroupCd == "") {
            errDisplay = '@Maint.ACCOUNT_GROUP_CD' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }


        if (accountGroupName.trim() == "") { // required content
            errDisplay = '@Maint.ACCOUNT_GROUP_NAME' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        return invalidMess;
    }

    ////////////////////////////////////////////////////////////////////////////////////
    ////Clear
    ////////////////////////////////////////////////////////////////////////////////////
    $(document).off('#btnClear');
    $(document).on('click', '#btnClear', function () {
        iseiQ.utility.showConfirmModal('@string.Format(@Messages.ConfirmClear)', function (action) {
            $('.validation-summary-errors').remove();
            if (action) {
                if ($('#ACCOUNT_GROUP_SEQ_NO').val() == "0") {
                    var result = iseiQ.utility.getDataByAjax(checkTimeOutUrl, null);
                    if (!result) return;
                    $("#ACCOUNT_GROUP_CD").val("");
                    $("#ACCOUNT_GROUP_NAME").val("");
                    $("#DISABLE_FLG").prop('checked', false).change();
                    $('#DISABLE_FLG_HIDDEN').val('0');
                } else {

                    $("#ACCOUNT_GROUP_CD").val('@Model.ACCOUNT_GROUP_CD');
                    $("#ACCOUNT_GROUP_NAME").val($("#CLEAR_ACCOUNT_GROUP_NAME").val());
                    $("#DISABLE_FLG_HIDDEN").val('@Model.DISABLE_FLG').change();
                    if ('@Model.DISABLE_FLG' == '0') {
                        $("#DISABLE_FLG").prop("checked", false);
                    } else {
                        $("#DISABLE_FLG").prop("checked", true);
                    }
                }
            }
        })
    });

    $(document).off('#DISABLE_FLG');
    $(document).on('change', '#DISABLE_FLG', function () {
        if ($('#DISABLE_FLG').is(":checked")) {
            $('#DISABLE_FLG_HIDDEN').val('1');
        } else {
            $('#DISABLE_FLG_HIDDEN').val('0');
        }
    });

    ////////////////////////////////////////////////////////////////////////////////////
    ////Submit
    ////////////////////////////////////////////////////////////////////////////////////
    $(document).off('#btnSubmit');
    $(document).on('click', '#btnSubmit', function () {

        if (!iseiQ.utility.getDataByAjax(checkTimeOutUrl, null)) return;

        $('.validation-summary-errors').remove();
        var invalidMess = validateData();
        if (invalidMess.length > 0) {
            iseiQ.utility.showClientError(invalidMess);
            return false;
        }

        var accountGroupCd = '@Model.ACCOUNT_GROUP_CD';
        var accountGroupName = '@Model.ACCOUNT_GROUP_NAME';

        var insFlg = false;
        var infoSeqNo = '@Model.ACCOUNT_GROUP_SEQ_NO';

        if (infoSeqNo == 0) {
            $('#INS_DATE').val('@tempDateTime.ToString()');
            $('#INS_DATE').css("visibility", "hidden");
            $('#UPD_DATE').val('@tempDateTime.ToString()');
            $('#UPD_DATE').css("visibility", "hidden");
            insFlg = true;
        } else {
            insFlg = true;
        }

        if (insFlg) {
            iseiQ.utility.showConfirmModal('@string.Format(@Messages.ConfirmSubmitData, (!String.IsNullOrEmpty(Model.ACCOUNT_GROUP_CD) ? Messages.Update : Messages.Register))', function (action) {
                if (action) {
                    $("#Regis").submit();
                }
            })
        }
    });


    $("#Regis").submit(function (event) {
        if (!iseiQ.utility.getDataByAjax(checkTimeOutUrl, null)) return;
        var formData = new FormData($(this)[0]);
        $.ajax(
        {
            url: '@Url.Action("Edit", "AccountingSubjectGroupMaint")',
            data: formData,
            mimeType: "multipart/form-data",
            type: 'POST',
            contentType: false,
            processData: false,
            success: function (res) {
                var data = JSON.parse(res);
                if (data.statusCode == HTTPCode.CREATED) {
                    console.log(res);
                    if (res.length == 0) {
                        window.parent.$('.ui-dialog-content:visible').dialog('close');
                        window.location.href = '/Common/Common/CloseIframe/';
                    } else {
                        var result = jQuery.parseJSON(res);
                        window.parent.$('.ui-dialog-content:visible').dialog('close');
                        var message = result.isNew == true ? "@Maint.AccountingSubjectGroupMaintRegisterSuccess" : "@Maint.AccountingSubjectGroupMaintUpdateSuccess";
                        iseiQ.utility.showMessageModal(message, false, function () {
                            $('#Back').submit();
                            return false;
                        });
                    }
                }
                else
                {
                    var invalidMess = [];
                    invalidMess.push('@Maint.AccountingSubjectMaintDuplicateCode');
                    iseiQ.utility.showClientError(invalidMess);
                    return false
                }
            },
            error: function (xhr) {
                window.parent.$('.ui-dialog-content:visible').dialog('close');
                window.location.href = '/Common/Common/CloseIframe/';
            }
        });
        event.preventDefault();
    });

    ////////////////////////////////////////////////////////////////////////////////////
    ////Back
    ////////////////////////////////////////////////////////////////////////////////////
    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        iseiQ.utility.showConfirmModal('@string.Format(@Messages.ConfirmBack)', function (action) {
            if (action) {
                var result = iseiQ.utility.getDataByAjax(checkTimeOutUrl, null);
                if (!result) return;
                $(window).off('beforeunload');
                $('#Back').submit();
            }
        })
    });

</script>