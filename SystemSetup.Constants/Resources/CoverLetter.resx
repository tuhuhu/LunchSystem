<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnClear" xml:space="preserve">
    <value>条件クリア</value>
  </data>
  <data name="btnRegister" xml:space="preserve">
    <value>登録</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="lblCustomer" xml:space="preserve">
    <value>取引先名</value>
  </data>
  <data name="lblCustomerKana" xml:space="preserve">
    <value>取引先名(カナ)</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>送付状作成</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="btnOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="btnCreateManyCoverLetter" xml:space="preserve">
    <value>選択を一括作成</value>
  </data>
  <data name="lbCreateCoverLetter" xml:space="preserve">
    <value>作成</value>
  </data>
  <data name="lbCreateType" xml:space="preserve">
    <value>作成種類</value>
  </data>
  <data name="lblCustomerAddress" xml:space="preserve">
    <value>住所</value>
  </data>
  <data name="msgConfirmCreate" xml:space="preserve">
    <value>送付状を作成します。よろしいですか？</value>
  </data>
  <data name="TH_Address1" xml:space="preserve">
    <value>住所１</value>
  </data>
  <data name="TH_Address2" xml:space="preserve">
    <value>住所２</value>
  </data>
  <data name="TH_CreateCoverLetter" xml:space="preserve">
    <value>個別作成</value>
  </data>
  <data name="TH_Customer" xml:space="preserve">
    <value>取引先</value>
  </data>
  <data name="TH_Fax" xml:space="preserve">
    <value>FAX</value>
  </data>
  <data name="TH_Group" xml:space="preserve">
    <value>部署名</value>
  </data>
  <data name="TH_Note" xml:space="preserve">
    <value>備考</value>
  </data>
  <data name="TH_PIC" xml:space="preserve">
    <value>担当者</value>
  </data>
  <data name="TH_Position" xml:space="preserve">
    <value>役職名</value>
  </data>
  <data name="TH_PostalCode" xml:space="preserve">
    <value>〒</value>
  </data>
  <data name="TH_Telephone" xml:space="preserve">
    <value>電話番号</value>
  </data>
  <data name="createTypeDocument" xml:space="preserve">
    <value>書類送付状</value>
  </data>
  <data name="createTypeEnvelopeAddress" xml:space="preserve">
    <value>封筒住所</value>
  </data>
  <data name="createTypeFax" xml:space="preserve">
    <value>FAX送付状</value>
  </data>
  <data name="outputFileByDocument" xml:space="preserve">
    <value>書類送付状_</value>
  </data>
  <data name="outputFileByEnvelopeAddress" xml:space="preserve">
    <value>封筒住所_</value>
  </data>
  <data name="outputFileByFax" xml:space="preserve">
    <value>FAX送付状_</value>
  </data>
  <data name="firstSheet" xml:space="preserve">
    <value>01</value>
  </data>
  <data name="symbolZipCode" xml:space="preserve">
    <value>〒</value>
  </data>
  <data name="formatPathByDocumentIsEmpty" xml:space="preserve">
    <value>書類送付状フォーマットが設定されていません。</value>
  </data>
  <data name="formatPathByEnvelopeAddressIsEmpty" xml:space="preserve">
    <value>封筒住所フォーマットが設定されていません。</value>
  </data>
  <data name="formatPathByFaxIsEmpty" xml:space="preserve">
    <value>FAX送付状フォーマットが設定されていません。</value>
  </data>
</root>